'use strict';

/**
* по дефолту express не апдейтит сессию если не было изменений в объекте сессия
* что не очень согласуется с желанием иметь сессию от времени последнего посещения
* а не от просто так
*/
function session_touch_middleware(ms_seconds){
  return function(req, res, next){
    if ('HEAD' == req.method || 'OPTIONS' == req.method) return next();
    req.session._garbage = Math.round(1*(new Date())/(ms_seconds)); //to force cookie update
    next();
  };
}

var cache_middleware = function(seconds) {
  return function(req, res, next) {
    res.setHeader('Cache-Control', 'public, max-age=' + seconds);
    return next();
  };
};

/**
 * эта мидлварка для генерации запрос-ответ результатов (нужна для того чтобы можно было отдавать проект на сторону для верстки и тп)
 * пока не поддерживает statusCode поэтому все ответы должны быть без ошибок
 */
function save_request_response_middleware(kDATA_SAVE_DIR){
  var mkdirp = require('mkdirp');
  var fs = require('fs');
  var crypto = require('crypto');

  mkdirp.sync(kDATA_SAVE_DIR);

  return function(req, res, next){
    var shasum = crypto.createHash('sha1');

    if ('HEAD' == req.method || 'OPTIONS' == req.method) return next();
    
    var stream = (function(){
      var url = req.url;
      var body_string = JSON.stringify(req.body);
      var kSPLITTER = '###-=-##-=-###';
      //console.log('AAAAA:',url+kSPLITTER+body_string+kSPLITTER+req.method);
      shasum.update(url+kSPLITTER+body_string+kSPLITTER+req.method);
      var sha_string = shasum.digest('hex');

      console.log('sha_string',sha_string);
      return fs.createWriteStream(kDATA_SAVE_DIR+'/'+sha_string);
    })();

    //сохранить оригинальные вызовы
    var write = res.write;
    var end = res.end;

    res.write = function(chunk, encoding){
      stream.write(chunk, encoding);
      write.call(res, chunk, encoding);
    };
    
    res.end = function(chunk, encoding){
      if(chunk){
        this.write(chunk, encoding);
      }
      stream.end();
      end.call(res);
    };

    req.on('close', function(){
      //взял из connect подробности см ниже
      //see #724 at https://github.com/senchalabs/connect/blob/master/lib/middleware/compress.js
      res.write = res.end = function(){};
    });
    
    
    next();
  };
}


module.exports.session_touch_middleware = session_touch_middleware;
module.exports.cache_middleware = cache_middleware;
module.exports.save_request_response_middleware = save_request_response_middleware;
